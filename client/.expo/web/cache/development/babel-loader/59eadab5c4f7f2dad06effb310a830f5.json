{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/Chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage, { useAsyncStorage } from \"@react-native-community/async-storage\";\nimport { VictoryChart, VictoryScatter, VictoryLine, VictoryAxis, VictoryBar } from \"victory-native\";\nimport { primaryColors, secondaryColors } from \"../models/Styles.js\";\nimport { days } from \"../models/Dates\";\nimport { getTreeObject } from \"../hooks\";\nvar tempdata = [{\n  date: \"Sunday\",\n  price: 0\n}, {\n  date: \"MondayAM\",\n  price: 0\n}, {\n  date: \"MondayPM\",\n  price: 0\n}, {\n  date: \"TuesdayAM\",\n  price: 0\n}, {\n  date: \"TuesdayPM\",\n  price: 0\n}, {\n  date: \"WednesdayAM\",\n  price: 0\n}, {\n  date: \"WednesdayPM\",\n  price: 0\n}, {\n  date: \"ThursdayAM\",\n  price: 0\n}, {\n  date: \"ThuesdayPM\",\n  price: 0\n}, {\n  date: \"FridayAM\",\n  price: 0\n}, {\n  date: \"FridayPM\",\n  price: 0\n}, {\n  date: \"SaturdayAM\",\n  price: 0\n}, {\n  date: \"SaturdayPM\",\n  price: 0\n}];\nvar tickFormat = [\"S\", \"M\", \" \", \"T\", \" \", \"W\", \" \", \"T\", \" \", \"F\", \" \", \"S\", \" \"];\nvar typeNames = {\n  R: \"Random\",\n  BS: \"Big Spike\",\n  SS: \"Small Spike\",\n  D: \"Constant Falling\"\n};\n\nvar Chart = function Chart(_ref) {\n  var homeChart = _ref.homeChart;\n\n  var _useState = useState(tempdata),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      types = _useState4[0],\n      setTypes = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataEmpty = _useState6[0],\n      setDataEmpty = _useState6[1];\n\n  var listTypes = types.length == 0 ? React.createElement(Text, {\n    key: \"None\",\n    style: _objectSpread(_objectSpread({}, styles.typeText), {}, {\n      color: secondaryColors.red\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Data Insufficient. No trends available.\") : types.map(function (type) {\n    return React.createElement(Text, {\n      key: type,\n      style: styles.typeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, typeNames[type]);\n  });\n  var yAxis = homeChart || dataEmpty ? undefined : React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 42\n    }\n  });\n\n  var getData = function getData() {\n    var keys, storage, res;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiGet(keys));\n\n          case 6:\n            storage = _context.sent;\n            res = storage.filter(function (el) {\n              return days.includes(el[0]);\n            });\n            return _context.abrupt(\"return\", res);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var updatePrice = function updatePrice() {\n    var storeData, temp, used;\n    return _regeneratorRuntime.async(function updatePrice$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n            storeData = _context2.sent;\n            setDataEmpty(storeData.length == 0);\n            temp = [];\n            used = {};\n            days.forEach(function (day) {\n              used[day] = false;\n            });\n            storeData.forEach(function (entry) {\n              used[entry[0]] = true;\n              temp.push({\n                date: entry[0],\n                price: parseInt(entry[1], 10)\n              });\n            });\n            days.forEach(function (day) {\n              if (!used[day]) {\n                temp.push({\n                  date: day,\n                  price: 0\n                });\n              } else {}\n            });\n            setData(temp);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      updatePrice();\n\n      (function _callee() {\n        var tree;\n        return _regeneratorRuntime.async(function _callee$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = JSON;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"tree\"));\n\n              case 3:\n                _context3.t1 = _context3.sent;\n                tree = _context3.t0.parse.call(_context3.t0, _context3.t1);\n                setTypes(tree != null ? tree.types : []);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, React.createElement(VictoryChart, {\n    height: Dimensions.get(\"window\").height / 3,\n    width: Dimensions.get(\"window\").width / 1.05,\n    minDomain: {\n      y: 0\n    },\n    domainPadding: {\n      y: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(VictoryAxis, {\n    tickValues: days,\n    tickFormat: tickFormat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), yAxis, React.createElement(VictoryBar, {\n    data: data,\n    x: \"date\",\n    y: \"price\",\n    interpolation: \"cardinal\",\n    style: {\n      data: {\n        color: primaryColors.darkgreen,\n        fill: secondaryColors.rose\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  })), homeChart ? undefined : React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.typeText), {}, {\n      fontSize: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Likely Trends:\"), homeChart ? undefined : listTypes);\n};\n\nvar styles = StyleSheet.create({\n  typeText: {\n    fontFamily: \"acnh\",\n    color: primaryColors.darkgreen,\n    paddingLeft: 10\n  }\n});\nexport default Chart;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/Chart.js"],"names":["React","useState","useEffect","AsyncStorage","useAsyncStorage","VictoryChart","VictoryScatter","VictoryLine","VictoryAxis","VictoryBar","primaryColors","secondaryColors","days","getTreeObject","tempdata","date","price","tickFormat","typeNames","R","BS","SS","D","Chart","homeChart","data","setData","types","setTypes","dataEmpty","setDataEmpty","listTypes","length","styles","typeText","color","red","map","type","yAxis","undefined","getData","getAllKeys","keys","multiGet","storage","res","filter","el","includes","console","log","updatePrice","storeData","temp","used","forEach","day","entry","push","parseInt","interval","setInterval","JSON","getItem","tree","parse","clearInterval","Dimensions","get","height","width","y","darkgreen","fill","rose","fontSize","StyleSheet","create","fontFamily","paddingLeft"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,IACEC,eADF,QAEO,uCAFP;AAGA,SACEC,YADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,gBANP;AAQA,SAASC,aAAT,EAAwBC,eAAxB;AACA,SAASC,IAAT;AACA,SAASC,aAAT;AAEA,IAAIC,QAAQ,GAAG,CACb;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADa,EAEb;AAAED,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAFa,EAGb;AAAED,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHa,EAIb;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAJa,EAKb;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CALa,EAMb;AAAED,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CANa,EAOb;AAAED,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAPa,EAQb;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CARa,EASb;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CATa,EAUb;AAAED,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAVa,EAWb;AAAED,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAXa,EAYb;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAZa,EAab;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAba,CAAf;AAgBA,IAAMC,UAAU,GAAG,CACjB,GADiB,EAEjB,GAFiB,EAGjB,GAHiB,EAIjB,GAJiB,EAKjB,GALiB,EAMjB,GANiB,EAOjB,GAPiB,EAQjB,GARiB,EASjB,GATiB,EAUjB,GAViB,EAWjB,GAXiB,EAYjB,GAZiB,EAajB,GAbiB,CAAnB;AAgBA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,CAAC,EAAE,QADa;AAEhBC,EAAAA,EAAE,EAAE,WAFY;AAGhBC,EAAAA,EAAE,EAAE,aAHY;AAIhBC,EAAAA,CAAC,EAAE;AAJa,CAAlB;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACPvB,QAAQ,CAACa,QAAD,CADD;AAAA;AAAA,MACxBW,IADwB;AAAA,MAClBC,OADkB;;AAAA,mBAELzB,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,MAExB0B,KAFwB;AAAA,MAEjBC,QAFiB;;AAAA,mBAGG3B,QAAQ,CAAC,IAAD,CAHX;AAAA;AAAA,MAGxB4B,SAHwB;AAAA,MAGbC,YAHa;;AAK/B,MAAMC,SAAS,GACbJ,KAAK,CAACK,MAAN,IAAgB,CAAhB,GACE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAE,MADP;AAEE,IAAA,KAAK,kCACAC,MAAM,CAACC,QADP;AAEHC,MAAAA,KAAK,EAAExB,eAAe,CAACyB;AAFpB,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,GAWET,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD;AAAA,WACR,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAiB,MAAA,KAAK,EAAEL,MAAM,CAACC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,SAAS,CAACoB,IAAD,CADZ,CADQ;AAAA,GAAV,CAZJ;AAmBA,MAAMC,KAAK,GACTf,SAAS,IAAIK,SAAb,GAAyBW,SAAzB,GAAqC,oBAAC,WAAD;AAAa,IAAA,aAAa,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvC;;AAGA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKtC,YAAY,CAACuC,UAAb,EAFL;;AAAA;AAERC,YAAAA,IAFQ;AAAA;AAAA,6CAGQxC,YAAY,CAACyC,QAAb,CAAsBD,IAAtB,CAHR;;AAAA;AAGRE,YAAAA,OAHQ;AAIRC,YAAAA,GAJQ,GAIFD,OAAO,CAACE,MAAR,CAAe,UAACC,EAAD;AAAA,qBAAQpC,IAAI,CAACqC,QAAL,CAAcD,EAAE,CAAC,CAAD,CAAhB,CAAR;AAAA,aAAf,CAJE;AAAA,6CAKLF,GALK;;AAAA;AAAA;AAAA;AAOZI,YAAAA,OAAO,CAACC,GAAR;AAPY,6CAQL,EARK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAYA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMX,OAAO,EADb;;AAAA;AACZY,YAAAA,SADY;AAElBvB,YAAAA,YAAY,CAACuB,SAAS,CAACrB,MAAV,IAAoB,CAArB,CAAZ;AAEIsB,YAAAA,IAJc,GAIP,EAJO;AAMdC,YAAAA,IANc,GAMP,EANO;AAOlB3C,YAAAA,IAAI,CAAC4C,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBF,cAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,KAAZ;AACD,aAFD;AAIAJ,YAAAA,SAAS,CAACG,OAAV,CAAkB,UAACE,KAAD,EAAW;AAC3BH,cAAAA,IAAI,CAACG,KAAK,CAAC,CAAD,CAAN,CAAJ,GAAiB,IAAjB;AACAJ,cAAAA,IAAI,CAACK,IAAL,CAAU;AACR5C,gBAAAA,IAAI,EAAE2C,KAAK,CAAC,CAAD,CADH;AAER1C,gBAAAA,KAAK,EAAE4C,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX;AAFP,eAAV;AAID,aAND;AAQA9C,YAAAA,IAAI,CAAC4C,OAAL,CAAa,UAACC,GAAD,EAAS;AACpB,kBAAI,CAACF,IAAI,CAACE,GAAD,CAAT,EAAgB;AACdH,gBAAAA,IAAI,CAACK,IAAL,CAAU;AACR5C,kBAAAA,IAAI,EAAE0C,GADE;AAERzC,kBAAAA,KAAK,EAAE;AAFC,iBAAV;AAID,eALD,MAKO,CACN;AACF,aARD;AAUAU,YAAAA,OAAO,CAAC4B,IAAD,CAAP;;AA7BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAgCApD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM2D,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCV,MAAAA,WAAW;;AACX,OAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACYW,IADZ;AAAA;AAAA,iDAC6B5D,YAAY,CAAC6D,OAAb,CAAqB,MAArB,CAD7B;;AAAA;AAAA;AACKC,gBAAAA,IADL,gBACiBC,KADjB;AAECtC,gBAAAA,QAAQ,CAACqC,IAAI,IAAI,IAAR,GAAeA,IAAI,CAACtC,KAApB,GAA4B,EAA7B,CAAR;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAID,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO;AAAA,aAAMwC,aAAa,CAACN,QAAD,CAAnB;AAAA,KAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEO,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,CAD5C;AAEE,IAAA,KAAK,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,KAAzB,GAAiC,IAF1C;AAGE,IAAA,SAAS,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KAHb;AAIE,IAAA,aAAa,EAAE;AAAEA,MAAAA,CAAC,EAAE;AAAL,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE5D,IAAzB;AAA+B,IAAA,UAAU,EAAEK,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGsB,KAPH,EAQE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,CAAC,EAAC,MAFJ;AAGE,IAAA,CAAC,EAAC,OAHJ;AAIE,IAAA,aAAa,EAAC,UAJhB;AAKE,IAAA,KAAK,EAAE;AACLA,MAAAA,IAAI,EAAE;AACJU,QAAAA,KAAK,EAAEzB,aAAa,CAAC+D,SADjB;AAEJC,QAAAA,IAAI,EAAE/D,eAAe,CAACgE;AAFlB;AADD,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAuBGnD,SAAS,GAAGgB,SAAH,GACR,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAP,MAAM,CAACC,QADP;AAEH0C,MAAAA,QAAQ,EAAE;AAFP,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBJ,EAiCGpD,SAAS,GAAGgB,SAAH,GAAeT,SAjC3B,CADF;AAqCD,CAvHD;;AAyHA,IAAME,MAAM,GAAG4C,UAAU,CAACC,MAAX,CAAkB;AAC/B5C,EAAAA,QAAQ,EAAE;AACR6C,IAAAA,UAAU,EAAE,MADJ;AAER5C,IAAAA,KAAK,EAAEzB,aAAa,CAAC+D,SAFb;AAGRO,IAAAA,WAAW,EAAE;AAHL;AADqB,CAAlB,CAAf;AAQA,eAAezD,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, Dimensions, StyleSheet } from \"react-native\";\nimport AsyncStorage, {\n  useAsyncStorage,\n} from \"@react-native-community/async-storage\";\nimport {\n  VictoryChart,\n  VictoryScatter,\n  VictoryLine,\n  VictoryAxis,\n  VictoryBar,\n} from \"victory-native\";\n\nimport { primaryColors, secondaryColors } from \"../models/Styles.js\";\nimport { days } from \"../models/Dates\";\nimport { getTreeObject } from \"../hooks\";\n\nlet tempdata = [\n  { date: \"Sunday\", price: 0 },\n  { date: \"MondayAM\", price: 0 },\n  { date: \"MondayPM\", price: 0 },\n  { date: \"TuesdayAM\", price: 0 },\n  { date: \"TuesdayPM\", price: 0 },\n  { date: \"WednesdayAM\", price: 0 },\n  { date: \"WednesdayPM\", price: 0 },\n  { date: \"ThursdayAM\", price: 0 },\n  { date: \"ThuesdayPM\", price: 0 },\n  { date: \"FridayAM\", price: 0 },\n  { date: \"FridayPM\", price: 0 },\n  { date: \"SaturdayAM\", price: 0 },\n  { date: \"SaturdayPM\", price: 0 },\n];\n\nconst tickFormat = [\n  \"S\",\n  \"M\",\n  \" \",\n  \"T\",\n  \" \",\n  \"W\",\n  \" \",\n  \"T\",\n  \" \",\n  \"F\",\n  \" \",\n  \"S\",\n  \" \",\n];\n\nconst typeNames = {\n  R: \"Random\",\n  BS: \"Big Spike\",\n  SS: \"Small Spike\",\n  D: \"Constant Falling\",\n};\n\nconst Chart = ({ homeChart }) => {\n  const [data, setData] = useState(tempdata);\n  const [types, setTypes] = useState([]);\n  const [dataEmpty, setDataEmpty] = useState(true);\n\n  const listTypes =\n    types.length == 0 ? (\n      <Text\n        key={\"None\"}\n        style={{\n          ...styles.typeText,\n          color: secondaryColors.red,\n        }}\n      >\n        Data Insufficient. No trends available.\n      </Text>\n    ) : (\n      types.map((type) => (\n        <Text key={type} style={styles.typeText}>\n          {typeNames[type]}\n        </Text>\n      ))\n    );\n\n  const yAxis =\n    homeChart || dataEmpty ? undefined : <VictoryAxis dependentAxis />;\n\n  const getData = async () => {\n    try {\n      let keys = await AsyncStorage.getAllKeys();\n      let storage = await AsyncStorage.multiGet(keys);\n      let res = storage.filter((el) => days.includes(el[0]));\n      return res;\n    } catch (e) {\n      console.log(e);\n      return [];\n    }\n  };\n\n  const updatePrice = async () => {\n    const storeData = await getData();\n    setDataEmpty(storeData.length == 0);\n\n    let temp = [];\n\n    let used = {};\n    days.forEach((day) => {\n      used[day] = false;\n    });\n\n    storeData.forEach((entry) => {\n      used[entry[0]] = true;\n      temp.push({\n        date: entry[0],\n        price: parseInt(entry[1], 10),\n      });\n    });\n\n    days.forEach((day) => {\n      if (!used[day]) {\n        temp.push({\n          date: day,\n          price: 0,\n        });\n      } else {\n      }\n    });\n\n    setData(temp);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updatePrice();\n      (async () => {\n        let tree = JSON.parse(await AsyncStorage.getItem(\"tree\"));\n        setTypes(tree != null ? tree.types : []);\n      })();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <View>\n      <VictoryChart\n        height={Dimensions.get(\"window\").height / 3}\n        width={Dimensions.get(\"window\").width / 1.05}\n        minDomain={{ y: 0 }}\n        domainPadding={{ y: 10 }}\n      >\n        <VictoryAxis tickValues={days} tickFormat={tickFormat} />\n        {yAxis}\n        <VictoryBar\n          data={data}\n          x=\"date\"\n          y=\"price\"\n          interpolation=\"cardinal\"\n          style={{\n            data: {\n              color: primaryColors.darkgreen,\n              fill: secondaryColors.rose,\n            },\n          }}\n        />\n      </VictoryChart>\n\n      {homeChart ? undefined : (\n        <Text\n          style={{\n            ...styles.typeText,\n            fontSize: 20,\n          }}\n        >\n          Likely Trends:\n        </Text>\n      )}\n      {homeChart ? undefined : listTypes}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  typeText: {\n    fontFamily: \"acnh\",\n    color: primaryColors.darkgreen,\n    paddingLeft: 10,\n  },\n});\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}