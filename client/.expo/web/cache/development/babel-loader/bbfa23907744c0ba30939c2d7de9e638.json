{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AppLoading } from \"expo\";\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nvar DateHeader = function DateHeader(_ref) {\n  var date = _ref.date;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      weekday = _useState2[0],\n      setDay = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      meridian = _useState4[0],\n      setMeridian = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hour = _useState6[0],\n      setHour = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      minute = _useState8[0],\n      setMinute = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timeLoaded = _useState10[0],\n      setTimeLoaded = _useState10[1];\n\n  useEffect(function () {\n    var d = new Date();\n    var meridianControl = new Date();\n    meridianControl.setHours(12);\n    setDay(day[d.toDateString().split(\" \")[0]]);\n    setMeridian(d.getTime() < meridianControl.getTime() ? \"AM\" : \"PM\");\n    setHour(d.getHours() % 12);\n    setMinute(d.getMinutes());\n    setTimeLoaded(true);\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.dateText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, weekday, \" \", meridian), React.createElement(Text, {\n    style: styles.timeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, hour != 0 ? hour : \"12\", \":\", minute < 10 ? \"0\" + minute.toString() : minute, meridian.toLowerCase()));\n};\n\nvar styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\"\n  }\n});\nexport default DateHeader;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js"],"names":["React","useState","useEffect","useLayoutEffect","AppLoading","primaryColors","fonts","day","DateHeader","date","weekday","setDay","meridian","setMeridian","hour","setHour","minute","setMinute","timeLoaded","setTimeLoaded","d","Date","meridianControl","setHours","toDateString","split","getTime","getHours","getMinutes","styles","dateText","timeText","toString","toLowerCase","StyleSheet","create","dateContainer","marginTop","fontFamily","fontSize","alignSelf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D;;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,aAAT,EAAwBC,KAAxB;AACA,SAASC,GAAT;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACLR,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,MACxBS,OADwB;AAAA,MACfC,MADe;;AAAA,mBAECV,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAExBW,QAFwB;AAAA,MAEdC,WAFc;;AAAA,mBAGPZ,QAAQ,EAHD;AAAA;AAAA,MAGxBa,IAHwB;AAAA,MAGlBC,OAHkB;;AAAA,mBAIHd,QAAQ,EAJL;AAAA;AAAA,MAIxBe,MAJwB;AAAA,MAIhBC,SAJgB;;AAAA,mBAKKhB,QAAQ,CAAC,KAAD,CALb;AAAA;AAAA,MAKxBiB,UALwB;AAAA,MAKZC,aALY;;AAM/BjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,QAAIC,eAAe,GAAG,IAAID,IAAJ,EAAtB;AACAC,IAAAA,eAAe,CAACC,QAAhB,CAAyB,EAAzB;AACAZ,IAAAA,MAAM,CAACJ,GAAG,CAACa,CAAC,CAACI,YAAF,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAAJ,CAAN;AACAZ,IAAAA,WAAW,CAACO,CAAC,CAACM,OAAF,KAAcJ,eAAe,CAACI,OAAhB,EAAd,GAA0C,IAA1C,GAAiD,IAAlD,CAAX;AACAX,IAAAA,OAAO,CAACK,CAAC,CAACO,QAAF,KAAe,EAAhB,CAAP;AACAV,IAAAA,SAAS,CAACG,CAAC,CAACQ,UAAF,EAAD,CAAT;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GATQ,CAAT;AAwBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OADH,OACaE,QADb,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,IAAI,CAAR,GAAYA,IAAZ,GAAmB,IADtB,OAEGE,MAAM,GAAG,EAAT,GAAc,MAAMA,MAAM,CAACgB,QAAP,EAApB,GAAwChB,MAF3C,EAGGJ,QAAQ,CAACqB,WAAT,EAHH,CAJF,CADF;AAYD,CA1CD;;AA4CA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GADgB;AAI/BP,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAJqB;AAS/BT,EAAAA,QAAQ,EAAE;AACRO,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH;AATqB,CAAlB,CAAf;AAeA,eAAehC,UAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { StyleSheet, Text, View, AsyncStorage } from \"react-native\";\nimport { AppLoading } from \"expo\";\n\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nconst DateHeader = ({ date }) => {\n  const [weekday, setDay] = useState(\"\");\n  const [meridian, setMeridian] = useState(\"\");\n  const [hour, setHour] = useState();\n  const [minute, setMinute] = useState();\n  const [timeLoaded, setTimeLoaded] = useState(false);\n  useEffect(() => {\n    let d = new Date();\n    let meridianControl = new Date();\n    meridianControl.setHours(12);\n    setDay(day[d.toDateString().split(\" \")[0]]);\n    setMeridian(d.getTime() < meridianControl.getTime() ? \"AM\" : \"PM\");\n    setHour(d.getHours() % 12);\n    setMinute(d.getMinutes());\n    setTimeLoaded(true);\n  });\n  /*\n  useLayoutEffect(() => {\n    setInterval(() => {\n      let d = date;\n      let meridianControl = new Date();\n      meridianControl.setHours(12);\n      setDay(day[d.toDateString().split(\" \")[0]]);\n      setMeridian(d.getTime() < meridianControl.getTime() ? \"AM\" : \"PM\");\n      setHour(d.getHours() % 12);\n      setMinute(d.getMinutes());\n      setTimeLoaded(true);\n    }, 1000);\n  });*/\n\n  return (\n    <View>\n      <Text style={styles.dateText}>\n        {weekday} {meridian}\n      </Text>\n      <Text style={styles.timeText}>\n        {hour != 0 ? hour : \"12\"}:\n        {minute < 10 ? \"0\" + minute.toString() : minute}\n        {meridian.toLowerCase()}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50,\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\",\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\",\n  },\n});\nexport default DateHeader;\n"]},"metadata":{},"sourceType":"module"}