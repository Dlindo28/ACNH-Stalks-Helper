{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AppLoading } from \"expo\";\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nvar getDay = function getDay(date) {\n  return day[d.toDateString().split(\" \")[0]];\n};\n\nvar DateHeader = function DateHeader() {\n  var d = new Date();\n  var meridianControl = new Date();\n  meridianControl.setHours(12);\n\n  var _useState = useState(d),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      setDate(new Date());\n    });\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.dateText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, getDay(date), \" \", meridian), React.createElement(Text, {\n    style: styles.timeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, hour != 0 ? hour : \"12\", \":\", minute < 10 ? \"0\" + minute.toString() : minute, meridian.toLowerCase()));\n};\n\nvar styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\"\n  }\n});\nexport default DateHeader;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js"],"names":["React","useState","useEffect","useLayoutEffect","AppLoading","primaryColors","fonts","day","getDay","date","d","toDateString","split","DateHeader","Date","meridianControl","setHours","setDate","setInterval","styles","dateText","meridian","timeText","hour","minute","toString","toLowerCase","StyleSheet","create","dateContainer","marginTop","fontFamily","fontSize","alignSelf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D;;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,aAAT,EAAwBC,KAAxB;AACA,SAASC,GAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AACvB,SAAOF,GAAG,CAACG,CAAC,CAACC,YAAF,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAAV;AACD,CAFD;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIH,CAAC,GAAG,IAAII,IAAJ,EAAR;AACA,MAAIC,eAAe,GAAG,IAAID,IAAJ,EAAtB;AACAC,EAAAA,eAAe,CAACC,QAAhB,CAAyB,EAAzB;;AAHuB,kBAKCf,QAAQ,CAACS,CAAD,CALT;AAAA;AAAA,MAKhBD,IALgB;AAAA,MAKVQ,OALU;;AAMvBf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,WAAW,CAAC,YAAM;AAChBD,MAAAA,OAAO,CAAC,IAAIH,IAAJ,EAAD,CAAP;AACD,KAFU,CAAX;AAGD,GAJQ,CAAT;AAmBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACC,IAAD,CADT,OACkBY,QADlB,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,IAAI,CAAR,GAAYA,IAAZ,GAAmB,IADtB,OAEGC,MAAM,GAAG,EAAT,GAAc,MAAMA,MAAM,CAACC,QAAP,EAApB,GAAwCD,MAF3C,EAGGH,QAAQ,CAACK,WAAT,EAHH,CAJF,CADF;AAYD,CArCD;;AAuCA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GADgB;AAI/BV,EAAAA,QAAQ,EAAE;AACRW,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAJqB;AAS/BX,EAAAA,QAAQ,EAAE;AACRS,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH;AATqB,CAAlB,CAAf;AAeA,eAAepB,UAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { StyleSheet, Text, View, AsyncStorage } from \"react-native\";\nimport { AppLoading } from \"expo\";\n\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nconst getDay = (date) => {\n  return day[d.toDateString().split(\" \")[0]];\n};\n\nconst DateHeader = () => {\n  let d = new Date();\n  let meridianControl = new Date();\n  meridianControl.setHours(12);\n\n  const [date, setDate] = useState(d);\n  useEffect(() => {\n    setInterval(() => {\n      setDate(new Date());\n    });\n  });\n  /*\n  useLayoutEffect(() => {\n    setInterval(() => {\n      let d = date;\n      let meridianControl = new Date();\n      meridianControl.setHours(12);\n      setDay(day[d.toDateString().split(\" \")[0]]);\n      setMeridian(d.getTime() < meridianControl.getTime() ? \"AM\" : \"PM\");\n      setHour(d.getHours() % 12);\n      setMinute(d.getMinutes());\n      setTimeLoaded(true);\n    }, 1000);\n  });*/\n\n  return (\n    <View>\n      <Text style={styles.dateText}>\n        {getDay(date)} {meridian}\n      </Text>\n      <Text style={styles.timeText}>\n        {hour != 0 ? hour : \"12\"}:\n        {minute < 10 ? \"0\" + minute.toString() : minute}\n        {meridian.toLowerCase()}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50,\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\",\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\",\n  },\n});\nexport default DateHeader;\n"]},"metadata":{},"sourceType":"module"}