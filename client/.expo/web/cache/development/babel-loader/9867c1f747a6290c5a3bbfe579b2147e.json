{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/ChartPanel.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nvar displayPrice = function displayPrice() {\n  var price;\n  return _regeneratorRuntime.async(function displayPrice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"price\"));\n\n        case 3:\n          price = _context.sent;\n          return _context.abrupt(\"return\", price);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar Panel = function Panel(_ref) {\n  var open = _ref.open,\n      togglePanel = _ref.togglePanel;\n\n  if (open) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: togglePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, displayPrice()))));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: togglePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.closedPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nvar ChartPanel = function ChartPanel() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      panelIsOpen = _useState2[0],\n      setPanelIsOpen = _useState2[1];\n\n  var togglePanel = function togglePanel() {\n    setPanelIsOpen(!panelIsOpen);\n  };\n\n  if (panelIsOpen) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: togglePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Display Price\"))));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: togglePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.closedPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nvar styles = StyleSheet.create({\n  closedPanel: {\n    backgroundColor: primaryColors.cream,\n    height: 380,\n    width: 380,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  openPanel: {\n    backgroundColor: primaryColors.cream,\n    height: 600,\n    width: 380,\n    borderRadius: 10,\n    position: \"absolute\",\n    marginLeft: -190,\n    marginTop: -150\n  }\n});\nexport default ChartPanel;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/ChartPanel.js"],"names":["React","useState","useEffect","primaryColors","fonts","day","displayPrice","AsyncStorage","getItem","price","Panel","open","togglePanel","styles","openPanel","closedPanel","ChartPanel","panelIsOpen","setPanelIsOpen","StyleSheet","create","backgroundColor","cream","height","width","borderRadius","marginTop","position","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableWithoutFeedback,\n  AsyncStorage,\n} from \"react-native\";\n\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nlet displayPrice = async () => {\n  try {\n    let price = await AsyncStorage.getItem(\"price\");\n    return price;\n  } catch (err) {}\n};\n\nconst Panel = ({ open, togglePanel }) => {\n  if (open) {\n    return (\n      <View>\n        <TouchableWithoutFeedback onPress={togglePanel}>\n          <View style={styles.openPanel}>\n            <Text>{displayPrice()}</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  } else {\n    return (\n      <View>\n        <TouchableWithoutFeedback onPress={togglePanel}>\n          <View style={styles.closedPanel}></View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n};\n\nconst ChartPanel = () => {\n  const [panelIsOpen, setPanelIsOpen] = useState(false);\n  const togglePanel = () => {\n    setPanelIsOpen(!panelIsOpen);\n  };\n  if (panelIsOpen) {\n    return (\n      <View>\n        <TouchableWithoutFeedback onPress={togglePanel}>\n          <View style={styles.openPanel}>\n            <Text>Display Price</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  } else {\n    return (\n      <View>\n        <TouchableWithoutFeedback onPress={togglePanel}>\n          <View style={styles.closedPanel}></View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  closedPanel: {\n    backgroundColor: primaryColors.cream,\n    height: 380,\n    width: 380,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  openPanel: {\n    backgroundColor: primaryColors.cream,\n    height: 600,\n    width: 380,\n    borderRadius: 10,\n    position: \"absolute\",\n    marginLeft: -190,\n    marginTop: -150,\n  },\n});\n\nexport default ChartPanel;\n"]},"metadata":{},"sourceType":"module"}