{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/FullPriceEntry.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useSetPrice } from \"../hooks\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport TouchableButton from \"./TouchableButton\";\nimport { primaryColors } from \"../models/Styles\";\n\nvar getPrice = function getPrice(day) {\n  var price;\n  return _regeneratorRuntime.async(function getPrice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(day));\n\n        case 2:\n          price = _context.sent;\n          return _context.abrupt(\"return\", price != null ? price : \"0\");\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar PricedayRow = function PricedayRow(_ref) {\n  var day = _ref.day;\n  var setPrice = useSetPrice();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      amPrice = _useState2[0],\n      setAmPrice = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pmPrice = _useState4[0],\n      setPmPrice = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = setAmPrice;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getPrice(day + \"AM\"));\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              (0, _context2.t0)(_context2.t1);\n              _context2.t2 = setPmPrice;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(getPrice(day + \"PM\"));\n\n            case 8:\n              _context2.t3 = _context2.sent;\n              (0, _context2.t2)(_context2.t3);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.rowHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, day), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.rowInput,\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    onSubmitEditing: function onSubmitEditing(e) {\n      return e.nativeEvent.text != \"\" ? setPrice(e.nativeEvent.text, day + \"AM\") : console.log(\"Tried to enter empty price\");\n    },\n    placeholder: amPrice,\n    placeholderTextColor: primaryColors.darkgreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.rowInput,\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    onSubmitEditing: function onSubmitEditing(e) {\n      return e.nativeEvent.text != \"\" ? setPrice(e.nativeEvent.text, day + \"PM\") : console.log(\"Tried to enter empty price\");\n    },\n    placeholder: pmPrice,\n    placeholderTextColor: primaryColors.darkgreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar FullPriceday = function FullPriceday(_ref2) {\n  var setModalVisible = _ref2.setModalVisible;\n  var setPrice = useSetPrice();\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sunPrice = _useState6[0],\n      setSunPrice = _useState6[1];\n\n  var handleConfirm = function handleConfirm() {\n    setModalVisible(false);\n  };\n\n  useEffect(function () {\n    (function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = setSunPrice;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(getPrice(\"Sunday\"));\n\n            case 3:\n              _context3.t1 = _context3.sent;\n              (0, _context3.t0)(_context3.t1);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.rowHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Sunday\"), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, styles.rowInput), {}, {\n      marginBottom: 10\n    }),\n    placeholder: sunPrice,\n    placeholderTextColor: primaryColors.darkgreen,\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    onSubmitEditing: function onSubmitEditing(e) {\n      return e.nativeEvent.text != \"\" ? setPrice(e.nativeEvent.text, \"Sunday\") : console.log(\"Tried to enter empty price\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Monday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Tuesday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Wednesday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Thursday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Friday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), React.createElement(PricedayRow, {\n    day: \"Saturday\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableButton, {\n    onPress: handleConfirm,\n    backgroundColor: primaryColors.darkgreen,\n    color: primaryColors.cream,\n    text: \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColors.islandgreen,\n    paddingTop: 50,\n    alignItems: \"center\"\n  },\n  rowInput: {\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: primaryColors.darkgreen,\n    borderRadius: 5,\n    backgroundColor: primaryColors.white,\n    height: 30,\n    width: Dimensions.get(\"window\").width / 2.5,\n    paddingLeft: 10\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    marginBottom: 20\n  },\n  rowHeader: {\n    fontSize: 13,\n    fontFamily: \"acnh\",\n    alignSelf: \"center\",\n    marginBottom: 10\n  }\n});\nexport default FullPriceday;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/FullPriceEntry.js"],"names":["React","useEffect","useState","useRef","useSetPrice","AsyncStorage","TouchableButton","primaryColors","getPrice","day","getItem","price","PricedayRow","setPrice","amPrice","setAmPrice","pmPrice","setPmPrice","styles","rowHeader","rowContainer","rowInput","e","nativeEvent","text","console","log","darkgreen","FullPriceday","setModalVisible","sunPrice","setSunPrice","handleConfirm","container","marginBottom","cream","StyleSheet","create","flex","backgroundColor","islandgreen","paddingTop","alignItems","marginRight","borderWidth","borderColor","borderRadius","white","height","width","Dimensions","get","paddingLeft","flexDirection","fontSize","fontFamily","alignSelf"],"mappings":"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","sourcesContent":["/**\n * TODO: might need to use onChangeText() for\n * when the user types in a price, then\n * touches another input field before submitting\n *\n * TODO: Change sunday price input to allow a ratio\n * and/or tree init if the sunday input makes\n * data sufficient\n */\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { View, StyleSheet, TextInput, Text, Dimensions } from \"react-native\";\nimport { useSetPrice } from \"../hooks\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport TouchableButton from \"./TouchableButton\";\n\nimport { primaryColors } from \"../models/Styles\";\n\nconst getPrice = async (day) => {\n  const price = await AsyncStorage.getItem(day);\n  return price != null ? price : \"0\";\n};\n\nconst PricedayRow = ({ day }) => {\n  const setPrice = useSetPrice();\n  const [amPrice, setAmPrice] = useState();\n  const [pmPrice, setPmPrice] = useState();\n  useEffect(() => {\n    (async () => {\n      setAmPrice(await getPrice(`${day}AM`));\n      setPmPrice(await getPrice(`${day}PM`));\n    })();\n  }, []);\n\n  return (\n    <View>\n      <Text style={styles.rowHeader}>{day}</Text>\n      <View style={styles.rowContainer}>\n        <TextInput\n          style={styles.rowInput}\n          keyboardType=\"numeric\"\n          returnKeyType=\"done\"\n          onSubmitEditing={(e) =>\n            e.nativeEvent.text != \"\"\n              ? setPrice(e.nativeEvent.text, `${day}AM`)\n              : console.log(\"Tried to enter empty price\")\n          }\n          placeholder={amPrice}\n          placeholderTextColor={primaryColors.darkgreen}\n        />\n        <TextInput\n          style={styles.rowInput}\n          keyboardType=\"numeric\"\n          returnKeyType=\"done\"\n          onSubmitEditing={(e) =>\n            e.nativeEvent.text != \"\"\n              ? setPrice(e.nativeEvent.text, `${day}PM`)\n              : console.log(\"Tried to enter empty price\")\n          }\n          placeholder={pmPrice}\n          placeholderTextColor={primaryColors.darkgreen}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst FullPriceday = ({ setModalVisible }) => {\n  const setPrice = useSetPrice();\n  const [sunPrice, setSunPrice] = useState();\n\n  const handleConfirm = () => {\n    setModalVisible(false);\n  };\n\n  useEffect(() => {\n    (async () => {\n      setSunPrice(await getPrice(\"Sunday\"));\n    })();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.rowHeader}>Sunday</Text>\n      <TextInput\n        style={{\n          ...styles.rowInput,\n          marginBottom: 10,\n        }}\n        placeholder={sunPrice}\n        placeholderTextColor={primaryColors.darkgreen}\n        keyboardType=\"numeric\"\n        returnKeyType=\"done\"\n        onSubmitEditing={(e) =>\n          e.nativeEvent.text != \"\"\n            ? setPrice(e.nativeEvent.text, \"Sunday\")\n            : console.log(\"Tried to enter empty price\")\n        }\n      />\n      <PricedayRow day=\"Monday\" />\n      <PricedayRow day=\"Tuesday\" />\n      <PricedayRow day=\"Wednesday\" />\n      <PricedayRow day=\"Thursday\" />\n      <PricedayRow day=\"Friday\" />\n      <PricedayRow day=\"Saturday\" />\n      <TouchableButton\n        onPress={handleConfirm}\n        backgroundColor={primaryColors.darkgreen}\n        color={primaryColors.cream}\n        text=\"Close\"\n      />\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColors.islandgreen,\n    paddingTop: 50,\n    alignItems: \"center\",\n  },\n  rowInput: {\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: primaryColors.darkgreen,\n    borderRadius: 5,\n    backgroundColor: primaryColors.white,\n    height: 30,\n    width: Dimensions.get(\"window\").width / 2.5,\n    paddingLeft: 10,\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    marginBottom: 20,\n  },\n  rowHeader: {\n    fontSize: 13,\n    fontFamily: \"acnh\",\n    alignSelf: \"center\",\n    marginBottom: 10,\n  },\n});\n\nexport default FullPriceday;\n"]},"metadata":{},"sourceType":"module"}