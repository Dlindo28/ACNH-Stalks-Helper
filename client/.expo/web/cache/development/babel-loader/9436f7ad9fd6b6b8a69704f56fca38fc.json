{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar datetimepicker_1 = __importDefault(require(\"@react-native-community/datetimepicker\"));\n\nvar react_native_modal_1 = __importDefault(require(\"react-native-modal\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar _react_native_1$Dimen = react_native_1.Dimensions.get('window'),\n    height = _react_native_1$Dimen.height,\n    width = _react_native_1$Dimen.width;\n\nvar DateRangePicker = function DateRangePicker(props) {\n  var _react_1$useState = react_1.useState(false),\n      _react_1$useState2 = _slicedToArray(_react_1$useState, 2),\n      fromDateModalVisible = _react_1$useState2[0],\n      toggleFromDate = _react_1$useState2[1];\n\n  var _react_1$useState3 = react_1.useState(false),\n      _react_1$useState4 = _slicedToArray(_react_1$useState3, 2),\n      toDateModalVisible = _react_1$useState4[0],\n      toggleToDate = _react_1$useState4[1];\n\n  var _react_1$useState5 = react_1.useState(false),\n      _react_1$useState6 = _slicedToArray(_react_1$useState5, 2),\n      androidFromDateVisible = _react_1$useState6[0],\n      toggleFromDateAndroid = _react_1$useState6[1];\n\n  var _react_1$useState7 = react_1.useState(false),\n      _react_1$useState8 = _slicedToArray(_react_1$useState7, 2),\n      androidToDateVisible = _react_1$useState8[0],\n      toggleToDateAndroid = _react_1$useState8[1];\n\n  var _react_1$useState9 = react_1.useState(new Date()),\n      _react_1$useState10 = _slicedToArray(_react_1$useState9, 2),\n      fromDate = _react_1$useState10[0],\n      setFromDate = _react_1$useState10[1];\n\n  var _react_1$useState11 = react_1.useState(new Date()),\n      _react_1$useState12 = _slicedToArray(_react_1$useState11, 2),\n      toDate = _react_1$useState12[0],\n      setToDate = _react_1$useState12[1];\n\n  var _react_1$useState13 = react_1.useState(toDate),\n      _react_1$useState14 = _slicedToArray(_react_1$useState13, 2),\n      tempToDate = _react_1$useState14[0],\n      setTempToDate = _react_1$useState14[1];\n\n  var _react_1$useState15 = react_1.useState(fromDate),\n      _react_1$useState16 = _slicedToArray(_react_1$useState15, 2),\n      tempFromDate = _react_1$useState16[0],\n      setTempFromDate = _react_1$useState16[1];\n\n  var _react_1$useState17 = react_1.useState(false),\n      _react_1$useState18 = _slicedToArray(_react_1$useState17, 2),\n      today = _react_1$useState18[0],\n      todaySent = _react_1$useState18[1];\n\n  react_1.useEffect(function () {\n    if (today === false) {\n      props.onFromChange(new Date());\n      todaySent(true);\n    }\n  });\n\n  var toggleFromDateModal = function toggleFromDateModal() {\n    if (react_native_1.Platform.OS === 'ios') {\n      toggleFromDate(function (fromDateModalVisible) {\n        return !fromDateModalVisible;\n      });\n    } else if (react_native_1.Platform.OS === 'android') {\n        toggleFromDateAndroid(function (androidFromDateVisible) {\n          return !androidFromDateVisible;\n        });\n      }\n  };\n\n  var toggleToDateModal = function toggleToDateModal() {\n    if (react_native_1.Platform.OS === 'ios') {\n      toggleToDate(function (toDateModalVisible) {\n        return !toDateModalVisible;\n      });\n    } else if (react_native_1.Platform.OS === 'android') {\n        toggleToDateAndroid(function (androidToDateVisible) {\n          return !androidToDateVisible;\n        });\n      }\n\n    react_native_1.Keyboard.dismiss();\n  };\n\n  var selectFromDate = function selectFromDate(event, newDate) {\n    if (react_native_1.Platform.OS === 'android') {\n      if (newDate === undefined) {\n        toggleFromDateAndroid(function (androidFromDateVisible) {\n          return !androidFromDateVisible;\n        });\n      } else if (event.type === 'set') {\n          toggleFromDateAndroid(function (androidFromDateVisible) {\n            return !androidFromDateVisible;\n          });\n          setFromDate(newDate);\n          props.onFromChange(newDate);\n        } else if (event.type === 'dismissed') {\n            toggleFromDate(false);\n          }\n    } else if (react_native_1.Platform.OS === 'ios') {\n        if (newDate !== undefined) {\n          setTempFromDate(newDate);\n        }\n      }\n  };\n\n  var selectToDate = function selectToDate(event, newDate) {\n    if (react_native_1.Platform.OS === 'android') {\n      if (newDate === undefined) {\n        toggleToDateAndroid(function (androidToDateVisible) {\n          return !androidToDateVisible;\n        });\n      } else if (event.type === 'set') {\n          toggleToDateAndroid(function (androidToDateVisible) {\n            return !androidToDateVisible;\n          });\n          setToDate(newDate);\n          props.onToChange(newDate);\n        } else if (event.type === 'dismissed') {\n            toggleToDate(false);\n          }\n    } else if (react_native_1.Platform.OS === 'ios') {\n        if (newDate !== undefined) {\n          setTempToDate(newDate);\n        }\n      }\n  };\n\n  var renderFromIOSDatePicker = function renderFromIOSDatePicker() {\n    return react_1.default.createElement(datetimepicker_1.default, {\n      mode: \"date\",\n      value: tempFromDate ? tempFromDate : fromDate,\n      onChange: function onChange(event, newDate) {\n        return selectFromDate(event, newDate);\n      }\n    });\n  };\n\n  var pressCancelFromDate = function pressCancelFromDate() {\n    setTempFromDate(fromDate);\n    toggleFromDateModal();\n  };\n\n  var pressDoneFromDate = function pressDoneFromDate() {\n    setFromDate(tempFromDate);\n    props.onFromChange(tempFromDate);\n    toggleFromDateModal();\n  };\n\n  var renderToIOSDatePicker = function renderToIOSDatePicker() {\n    return react_1.default.createElement(datetimepicker_1.default, {\n      mode: \"date\",\n      value: tempToDate ? tempToDate : toDate,\n      onChange: function onChange(event, newDate) {\n        return selectToDate(event, newDate);\n      }\n    });\n  };\n\n  var pressCancelToDate = function pressCancelToDate() {\n    setTempToDate(toDate);\n    toggleToDateModal();\n  };\n\n  var pressDoneToDate = function pressDoneToDate() {\n    setToDate(tempToDate);\n    props.onToChange(tempToDate);\n    toggleToDateModal();\n  };\n\n  var renderToDateAndroidPicker = function renderToDateAndroidPicker() {\n    if (androidToDateVisible === true) {\n      return react_1.default.createElement(datetimepicker_1.default, {\n        mode: \"date\",\n        display: props.mode,\n        value: toDate,\n        onChange: function onChange(event, newDate) {\n          return selectToDate(event, newDate);\n        }\n      });\n    }\n  };\n\n  var renderFromDateAndroidPicker = function renderFromDateAndroidPicker() {\n    if (androidFromDateVisible === true) {\n      return react_1.default.createElement(datetimepicker_1.default, {\n        mode: \"date\",\n        display: props.mode,\n        value: fromDate,\n        onChange: function onChange(event, newDate) {\n          return selectFromDate(event, newDate);\n        }\n      });\n    }\n  };\n\n  return react_1.default.createElement(react_native_1.View, {\n    style: styles.container\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.inputTitleContainer\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.inputTitle\n  }, props.title === undefined ? 'Date Range' : props.title)), react_1.default.createElement(react_native_1.View, {\n    style: styles.toFromDateContainer\n  }, react_1.default.createElement(react_native_1.TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleFromDateModal();\n    },\n    style: styles.dateInfoContainer\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.dateText\n  }, \"From\"), react_1.default.createElement(react_native_1.Text, {\n    style: styles.text\n  }, moment_1.default(fromDate).format('MMM Do, YYYY'))), react_1.default.createElement(react_native_1.View, null, androidFromDateVisible === true ? renderFromDateAndroidPicker() : null), react_1.default.createElement(react_native_modal_1.default, {\n    isVisible: fromDateModalVisible,\n    style: styles.modal,\n    backdropOpacity: .30\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.modalContainer\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.pickerHeaderContainer\n  }, react_1.default.createElement(react_native_1.TouchableOpacity, {\n    onPress: function onPress() {\n      return pressCancelFromDate();\n    }\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.cancelText\n  }, \"Cancel\")), react_1.default.createElement(react_native_1.View, {\n    style: styles.doneButton\n  }, react_1.default.createElement(react_native_1.Button, {\n    onPress: function onPress() {\n      return pressDoneFromDate();\n    },\n    title: \"Done\",\n    disabled: fromDate === tempFromDate ? true : false\n  }))), react_1.default.createElement(react_native_1.View, {\n    style: styles.pickerContainer\n  }, renderFromIOSDatePicker())))), react_1.default.createElement(react_native_1.View, {\n    style: styles.divider\n  }), react_1.default.createElement(react_native_1.View, {\n    style: styles.toFromDateContainer\n  }, react_1.default.createElement(react_native_1.TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleToDateModal();\n    },\n    style: styles.dateInfoContainer\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.dateText\n  }, \"To\"), react_1.default.createElement(react_native_1.Text, {\n    style: styles.text\n  }, String(toDate) === String(fromDate) ? 'Select' : moment_1.default(toDate).format('MMM Do, YYYY'))), react_1.default.createElement(react_native_1.View, null, androidToDateVisible === true ? renderToDateAndroidPicker() : null), react_1.default.createElement(react_native_modal_1.default, {\n    isVisible: toDateModalVisible,\n    style: styles.modal,\n    backdropOpacity: .30\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.modalContainer\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.pickerHeaderContainer\n  }, react_1.default.createElement(react_native_1.TouchableOpacity, {\n    onPress: function onPress() {\n      return pressCancelToDate();\n    }\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.cancelText\n  }, \"Cancel\")), react_1.default.createElement(react_native_1.View, {\n    style: styles.doneButton\n  }, react_1.default.createElement(react_native_1.Button, {\n    onPress: function onPress() {\n      return pressDoneToDate();\n    },\n    title: \"Done\",\n    disabled: toDate === tempToDate ? true : false\n  }))), react_1.default.createElement(react_native_1.View, {\n    style: styles.pickerContainer\n  }, renderToIOSDatePicker())))));\n};\n\nvar styles = react_native_1.StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: width - 32,\n    marginRight: 16,\n    marginLeft: 16,\n    justifyContent: 'center'\n  },\n  inputTitleContainer: {\n    width: width,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputTitle: {\n    alignSelf: 'flex-start',\n    fontFamily: 'System',\n    fontSize: 24,\n    fontWeight: '700',\n    color: '#000'\n  },\n  toFromDateContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50\n  },\n  dateInfoContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: width - 32,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  dateText: {\n    fontFamily: 'System',\n    fontSize: 17,\n    fontWeight: '600',\n    color: '#000'\n  },\n  text: {\n    fontFamily: 'System',\n    fontSize: 17,\n    fontWeight: '400',\n    color: '#007AFF'\n  },\n  arrowForward: {\n    color: 'black',\n    opacity: .3,\n    marginRight: 7\n  },\n  divider: {\n    borderColor: '#7D7D7D',\n    borderBottomWidth: react_native_1.StyleSheet.hairlineWidth,\n    marginTop: 12,\n    marginBottom: 12\n  },\n  modal: {\n    margin: 0\n  },\n  modalContainer: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  pickerHeaderContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 45,\n    width: width,\n    backgroundColor: '#FAFAF8',\n    borderColor: '#7D7D7D',\n    borderBottomWidth: react_native_1.StyleSheet.hairlineWidth\n  },\n  pickerContainer: {\n    height: 250,\n    width: width,\n    backgroundColor: 'white'\n  },\n  doneButton: {\n    marginRight: 7\n  },\n  doneText: {\n    fontFamily: 'System',\n    color: '#007AFF',\n    fontWeight: '600',\n    fontSize: 17,\n    marginRight: 16\n  },\n  cancelText: {\n    fontFamily: 'System',\n    color: '#007AFF',\n    fontWeight: '400',\n    fontSize: 17,\n    marginLeft: 16\n  }\n});\nexports.default = DateRangePicker;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/node_modules/react-native-ultimate-modal-picker/dist/DateRangePicker.js"],"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","__importDefault","defineProperty","exports","value","react_1","require","datetimepicker_1","react_native_modal_1","moment_1","react_native_1","Dimensions","get","height","width","DateRangePicker","props","useState","fromDateModalVisible","toggleFromDate","toDateModalVisible","toggleToDate","androidFromDateVisible","toggleFromDateAndroid","androidToDateVisible","toggleToDateAndroid","Date","fromDate","setFromDate","toDate","setToDate","tempToDate","setTempToDate","tempFromDate","setTempFromDate","today","todaySent","useEffect","onFromChange","toggleFromDateModal","Platform","OS","toggleToDateModal","Keyboard","dismiss","selectFromDate","event","newDate","undefined","type","selectToDate","onToChange","renderFromIOSDatePicker","default","createElement","mode","onChange","pressCancelFromDate","pressDoneFromDate","renderToIOSDatePicker","pressCancelToDate","pressDoneToDate","renderToDateAndroidPicker","display","renderFromDateAndroidPicker","View","style","styles","container","inputTitleContainer","Text","inputTitle","title","toFromDateContainer","TouchableOpacity","onPress","dateInfoContainer","dateText","text","format","isVisible","modal","backdropOpacity","modalContainer","pickerHeaderContainer","cancelText","doneButton","Button","disabled","pickerContainer","divider","String","StyleSheet","create","marginRight","marginLeft","justifyContent","flexDirection","alignItems","alignSelf","fontFamily","fontSize","fontWeight","color","paddingTop","paddingBottom","arrowForward","opacity","borderColor","borderBottomWidth","hairlineWidth","marginTop","marginBottom","margin","backgroundColor","doneText"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Imports: Dependencies\nconst react_1 = __importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst datetimepicker_1 = __importDefault(require(\"@react-native-community/datetimepicker\"));\nconst react_native_modal_1 = __importDefault(require(\"react-native-modal\"));\nconst moment_1 = __importDefault(require(\"moment\"));\n// Screen Dimensions\nconst { height, width } = react_native_1.Dimensions.get('window');\n// Component: Date Range Picker\nconst DateRangePicker = (props) => {\n    // React Hooks: State\n    const [fromDateModalVisible, toggleFromDate] = react_1.useState(false);\n    const [toDateModalVisible, toggleToDate] = react_1.useState(false);\n    const [androidFromDateVisible, toggleFromDateAndroid] = react_1.useState(false);\n    const [androidToDateVisible, toggleToDateAndroid] = react_1.useState(false);\n    const [fromDate, setFromDate] = react_1.useState(new Date());\n    const [toDate, setToDate] = react_1.useState(new Date());\n    const [tempToDate, setTempToDate] = react_1.useState(toDate);\n    const [tempFromDate, setTempFromDate] = react_1.useState(fromDate);\n    const [today, todaySent] = react_1.useState(false);\n    // React Hooks: Lifecycle Methods\n    react_1.useEffect(() => {\n        // Send Initial Date\n        if (today === false) {\n            // Props: onFromChange\n            props.onFromChange(new Date());\n            // Today's Date Has Been Sent To Parent Component\n            todaySent(true);\n        }\n    });\n    // Toggle From Date Modal\n    const toggleFromDateModal = () => {\n        // Check Platform (iOS)\n        if (react_native_1.Platform.OS === 'ios') {\n            // React Hook: Toggle Modal\n            toggleFromDate((fromDateModalVisible) => !fromDateModalVisible);\n        }\n        // Check Platform (Android)\n        else if (react_native_1.Platform.OS === 'android') {\n            // React Hook: Toggle Android\n            toggleFromDateAndroid((androidFromDateVisible) => !androidFromDateVisible);\n        }\n    };\n    // Toggle To Date Modal\n    const toggleToDateModal = () => {\n        // Check Platform (iOS)\n        if (react_native_1.Platform.OS === 'ios') {\n            // React Hook: Toggle Modal\n            toggleToDate((toDateModalVisible) => !toDateModalVisible);\n        }\n        // Check Platform (Android)\n        else if (react_native_1.Platform.OS === 'android') {\n            // React Hook: Toggle Android\n            toggleToDateAndroid((androidToDateVisible) => !androidToDateVisible);\n        }\n        // Dismiss Keyboard\n        react_native_1.Keyboard.dismiss();\n    };\n    // Select From Date\n    const selectFromDate = (event, newDate) => {\n        // Check Platform: Android\n        if (react_native_1.Platform.OS === 'android') {\n            // Undefined\n            if (newDate === undefined) {\n                // React Hook: Toggle From Date Android \n                toggleFromDateAndroid((androidFromDateVisible) => !androidFromDateVisible);\n            }\n            // Event Type: Set Date\n            else if (event.type === 'set') {\n                // React Hook: Toggle Android \n                toggleFromDateAndroid((androidFromDateVisible) => !androidFromDateVisible);\n                // React Hook: Set From Date\n                setFromDate(newDate);\n                // React Props: onChange\n                props.onFromChange(newDate);\n            }\n            // Event Type: Dismissed\n            else if (event.type === 'dismissed') {\n                // React Hook: Toggle Android\n                toggleFromDate(false);\n            }\n        }\n        // Check Platform: Android\n        else if (react_native_1.Platform.OS === 'ios') {\n            // Undefined\n            if (newDate !== undefined) {\n                // React Hook: Set Temp State\n                setTempFromDate(newDate);\n            }\n        }\n    };\n    // Select To Date\n    const selectToDate = (event, newDate) => {\n        // Check Platform: Android\n        if (react_native_1.Platform.OS === 'android') {\n            // Undefined\n            if (newDate === undefined) {\n                // React Hook: Toggle From Date Android \n                toggleToDateAndroid((androidToDateVisible) => !androidToDateVisible);\n            }\n            // Event Type: Set Date\n            else if (event.type === 'set') {\n                // React Hook: Toggle Android \n                toggleToDateAndroid((androidToDateVisible) => !androidToDateVisible);\n                // React Hook: Set To Date\n                setToDate(newDate);\n                // React Props: onChange\n                props.onToChange(newDate);\n            }\n            // Event Type: Dismissed\n            else if (event.type === 'dismissed') {\n                // React Hook: Toggle Android\n                toggleToDate(false);\n            }\n        }\n        // Check Platform: Android\n        else if (react_native_1.Platform.OS === 'ios') {\n            // Undefined\n            if (newDate !== undefined) {\n                // React Hook: Set Temp State\n                setTempToDate(newDate);\n            }\n        }\n    };\n    // Render From iOS Date Picker\n    const renderFromIOSDatePicker = () => {\n        return (react_1.default.createElement(datetimepicker_1.default, { mode: \"date\", value: tempFromDate ? tempFromDate : fromDate, onChange: (event, newDate) => selectFromDate(event, newDate) }));\n    };\n    // Press Cancel (From Date)\n    const pressCancelFromDate = () => {\n        // React Hook: Set Temp Date\n        setTempFromDate(fromDate);\n        // Toggle Modal\n        toggleFromDateModal();\n    };\n    // Press Done (From Date)\n    const pressDoneFromDate = () => {\n        // React Hook: Set Date\n        setFromDate(tempFromDate);\n        // Props: onChange\n        props.onFromChange(tempFromDate);\n        // Toggle Modal\n        toggleFromDateModal();\n    };\n    // Render To iOS Date Picker (To Date)\n    const renderToIOSDatePicker = () => {\n        return (react_1.default.createElement(datetimepicker_1.default, { mode: \"date\", value: tempToDate ? tempToDate : toDate, onChange: (event, newDate) => selectToDate(event, newDate) }));\n    };\n    // Press Cancel (To Date)\n    const pressCancelToDate = () => {\n        // React Hook: Set Temp Date\n        setTempToDate(toDate);\n        // Toggle Modal\n        toggleToDateModal();\n    };\n    // Press Done (To Date)\n    const pressDoneToDate = () => {\n        // React Hook: Set Date\n        setToDate(tempToDate);\n        // Props: onChange\n        props.onToChange(tempToDate);\n        // Toggle Modal\n        toggleToDateModal();\n    };\n    // Render To Date Android Picker\n    const renderToDateAndroidPicker = () => {\n        if (androidToDateVisible === true) {\n            return (react_1.default.createElement(datetimepicker_1.default, { mode: \"date\", display: props.mode, value: toDate, onChange: (event, newDate) => selectToDate(event, newDate) }));\n        }\n    };\n    // Render From Date Android Picker\n    const renderFromDateAndroidPicker = () => {\n        if (androidFromDateVisible === true) {\n            return (react_1.default.createElement(datetimepicker_1.default, { mode: \"date\", display: props.mode, value: fromDate, onChange: (event, newDate) => selectFromDate(event, newDate) }));\n        }\n    };\n    return (react_1.default.createElement(react_native_1.View, { style: styles.container },\n        react_1.default.createElement(react_native_1.View, { style: styles.inputTitleContainer },\n            react_1.default.createElement(react_native_1.Text, { style: styles.inputTitle }, props.title === undefined ? 'Date Range' : props.title)),\n        react_1.default.createElement(react_native_1.View, { style: styles.toFromDateContainer },\n            react_1.default.createElement(react_native_1.TouchableOpacity, { onPress: () => toggleFromDateModal(), style: styles.dateInfoContainer },\n                react_1.default.createElement(react_native_1.Text, { style: styles.dateText }, \"From\"),\n                react_1.default.createElement(react_native_1.Text, { style: styles.text }, moment_1.default(fromDate).format('MMM Do, YYYY'))),\n            react_1.default.createElement(react_native_1.View, null, androidFromDateVisible === true ? renderFromDateAndroidPicker() : null),\n            react_1.default.createElement(react_native_modal_1.default, { isVisible: fromDateModalVisible, style: styles.modal, backdropOpacity: .30 },\n                react_1.default.createElement(react_native_1.View, { style: styles.modalContainer },\n                    react_1.default.createElement(react_native_1.View, { style: styles.pickerHeaderContainer },\n                        react_1.default.createElement(react_native_1.TouchableOpacity, { onPress: () => pressCancelFromDate() },\n                            react_1.default.createElement(react_native_1.Text, { style: styles.cancelText }, \"Cancel\")),\n                        react_1.default.createElement(react_native_1.View, { style: styles.doneButton },\n                            react_1.default.createElement(react_native_1.Button, { onPress: () => pressDoneFromDate(), title: \"Done\", disabled: fromDate === tempFromDate ? true : false }))),\n                    react_1.default.createElement(react_native_1.View, { style: styles.pickerContainer }, renderFromIOSDatePicker())))),\n        react_1.default.createElement(react_native_1.View, { style: styles.divider }),\n        react_1.default.createElement(react_native_1.View, { style: styles.toFromDateContainer },\n            react_1.default.createElement(react_native_1.TouchableOpacity, { onPress: () => toggleToDateModal(), style: styles.dateInfoContainer },\n                react_1.default.createElement(react_native_1.Text, { style: styles.dateText }, \"To\"),\n                react_1.default.createElement(react_native_1.Text, { style: styles.text }, String(toDate) === String(fromDate) ? 'Select' : moment_1.default(toDate).format('MMM Do, YYYY'))),\n            react_1.default.createElement(react_native_1.View, null, androidToDateVisible === true ? renderToDateAndroidPicker() : null),\n            react_1.default.createElement(react_native_modal_1.default, { isVisible: toDateModalVisible, style: styles.modal, backdropOpacity: .30 },\n                react_1.default.createElement(react_native_1.View, { style: styles.modalContainer },\n                    react_1.default.createElement(react_native_1.View, { style: styles.pickerHeaderContainer },\n                        react_1.default.createElement(react_native_1.TouchableOpacity, { onPress: () => pressCancelToDate() },\n                            react_1.default.createElement(react_native_1.Text, { style: styles.cancelText }, \"Cancel\")),\n                        react_1.default.createElement(react_native_1.View, { style: styles.doneButton },\n                            react_1.default.createElement(react_native_1.Button, { onPress: () => pressDoneToDate(), title: \"Done\", disabled: toDate === tempToDate ? true : false }))),\n                    react_1.default.createElement(react_native_1.View, { style: styles.pickerContainer }, renderToIOSDatePicker()))))));\n};\n// Styles\nconst styles = react_native_1.StyleSheet.create({\n    container: {\n        display: 'flex',\n        width: width - 32,\n        marginRight: 16,\n        marginLeft: 16,\n        justifyContent: 'center',\n    },\n    inputTitleContainer: {\n        width: width,\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    inputTitle: {\n        alignSelf: 'flex-start',\n        fontFamily: 'System',\n        fontSize: 24,\n        fontWeight: '700',\n        color: '#000',\n    },\n    toFromDateContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 50,\n    },\n    dateInfoContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: width - 32,\n        paddingTop: 15,\n        paddingBottom: 15,\n    },\n    dateText: {\n        fontFamily: 'System',\n        fontSize: 17,\n        fontWeight: '600',\n        color: '#000',\n    },\n    text: {\n        fontFamily: 'System',\n        fontSize: 17,\n        fontWeight: '400',\n        color: '#007AFF',\n    },\n    arrowForward: {\n        color: 'black',\n        opacity: .3,\n        marginRight: 7,\n    },\n    divider: {\n        borderColor: '#7D7D7D',\n        borderBottomWidth: react_native_1.StyleSheet.hairlineWidth,\n        marginTop: 12,\n        marginBottom: 12,\n    },\n    modal: {\n        margin: 0,\n    },\n    modalContainer: {\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n    pickerHeaderContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: 45,\n        width: width,\n        backgroundColor: '#FAFAF8',\n        borderColor: '#7D7D7D',\n        borderBottomWidth: react_native_1.StyleSheet.hairlineWidth,\n    },\n    pickerContainer: {\n        height: 250,\n        width: width,\n        backgroundColor: 'white',\n    },\n    doneButton: {\n        marginRight: 7,\n    },\n    doneText: {\n        fontFamily: 'System',\n        color: '#007AFF',\n        fontWeight: '600',\n        fontSize: 17,\n        marginRight: 16,\n    },\n    cancelText: {\n        fontFamily: 'System',\n        color: '#007AFF',\n        fontWeight: '400',\n        fontSize: 17,\n        marginLeft: 16,\n    },\n});\n// Exports\nexports.default = DateRangePicker;\n"]},"metadata":{},"sourceType":"script"}