{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/ChartFull.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setYield, setCurPrice, clearYield } from \"../actions/yieldActions\";\nimport Chart from \"./Chart\";\nimport { primaryColors, secondaryColors } from \"../models/Styles.js\";\nimport { days } from \"../models/Dates\";\n\nvar ChartFull = function ChartFull() {\n  var dispatch = useDispatch();\n  var curPrice = useSelector(function (store) {\n    return store.yield.curPrice;\n  });\n\n  var _yield = useSelector(function (store) {\n    return store.yield.yield;\n  });\n\n  var isSufficient = useSelector(function (store) {\n    return store.dataSufficiency.sufficiency;\n  });\n\n  var getYield = function getYield() {\n    var sundayPrice, i, thisPrice, change;\n    return _regeneratorRuntime.async(function getYield$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"Sunday\"));\n\n          case 2:\n            sundayPrice = _context.sent;\n            i = days.length - 1;\n\n          case 4:\n            if (!(i >= 0)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(days[i]));\n\n          case 7:\n            thisPrice = _context.sent;\n\n            if (!(thisPrice != null)) {\n              _context.next = 12;\n              break;\n            }\n\n            dispatch(setCurPrice(thisPrice));\n\n            if (isSufficient) {\n              change = (curPrice - sundayPrice) / sundayPrice * 100;\n              dispatch(setYield(Math.round(change)));\n            } else {\n              dispatch(clearYield());\n            }\n\n            return _context.abrupt(\"break\", 15);\n\n          case 12:\n            i--;\n            _context.next = 4;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getYield());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.chartContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.dataText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Current Price: \", curPrice.toString(), React.createElement(Text, {\n    style: {\n      color: _yield < 0 ? secondaryColors.red : secondaryColors.green\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \" \", \"(\", _yield.toString(), \"%)\")), React.createElement(Chart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  chartContainer: {\n    backgroundColor: primaryColors.cream,\n    borderRadius: 10,\n    height: Dimensions.get(\"window\").height / 1.5,\n    paddingTop: 15,\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 2,\n      width: 2\n    }\n  },\n  dataText: {\n    fontFamily: \"acnh\",\n    color: primaryColors.darkgreen,\n    marginLeft: 10\n  }\n});\nexport default ChartFull;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/ChartFull.js"],"names":["React","useEffect","useState","AsyncStorage","useSelector","useDispatch","setYield","setCurPrice","clearYield","Chart","primaryColors","secondaryColors","days","ChartFull","dispatch","curPrice","store","yield","_yield","isSufficient","dataSufficiency","sufficiency","getYield","getItem","sundayPrice","i","length","thisPrice","change","Math","round","styles","chartContainer","dataText","toString","color","red","green","StyleSheet","create","backgroundColor","cream","borderRadius","height","Dimensions","get","paddingTop","shadowOpacity","shadowRadius","shadowOffset","width","fontFamily","darkgreen","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableWithoutFeedback,\n  Dimensions,\n  Text,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setYield, setCurPrice, clearYield } from \"../actions/yieldActions\";\n\nimport Chart from \"./Chart\";\n\nimport { primaryColors, secondaryColors } from \"../models/Styles.js\";\nimport { days } from \"../models/Dates\";\n\nconst ChartFull = () => {\n  const dispatch = useDispatch();\n  const curPrice = useSelector((store) => store.yield.curPrice);\n  const _yield = useSelector((store) => store.yield.yield);\n  const isSufficient = useSelector(\n    (store) => store.dataSufficiency.sufficiency\n  );\n\n  const getYield = async () => {\n    const sundayPrice = await AsyncStorage.getItem(\"Sunday\");\n    for (let i = days.length - 1; i >= 0; i--) {\n      const thisPrice = await AsyncStorage.getItem(days[i]);\n      if (thisPrice != null) {\n        dispatch(setCurPrice(thisPrice));\n        if (isSufficient) {\n          const change = ((curPrice - sundayPrice) / sundayPrice) * 100;\n          dispatch(setYield(Math.round(change)));\n        } else {\n          dispatch(clearYield());\n        }\n        break;\n      }\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      await getYield();\n    })();\n  });\n  return (\n    <View>\n      <TouchableWithoutFeedback>\n        <View style={styles.chartContainer}>\n          <Text style={styles.dataText}>\n            Current Price: {curPrice.toString()}\n            <Text\n              style={{\n                color: _yield < 0 ? secondaryColors.red : secondaryColors.green,\n              }}\n            >\n              {\" \"}\n              ({_yield.toString()}%)\n            </Text>\n          </Text>\n          <Chart />\n        </View>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  chartContainer: {\n    backgroundColor: primaryColors.cream,\n    borderRadius: 10,\n    height: Dimensions.get(\"window\").height / 1.5,\n    paddingTop: 15,\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 2,\n      width: 2,\n    },\n  },\n  dataText: {\n    fontFamily: \"acnh\",\n    color: primaryColors.darkgreen,\n    marginLeft: 10,\n  },\n});\n\nexport default ChartFull;\n"]},"metadata":{},"sourceType":"module"}