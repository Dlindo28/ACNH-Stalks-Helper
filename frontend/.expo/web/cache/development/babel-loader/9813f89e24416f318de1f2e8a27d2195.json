{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AppLoading } from \"expo\";\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nvar getDay = function getDay(date) {\n  return day[date.toDateString().split(\" \")[0]];\n};\n\nvar getMeridian = function getMeridian(date) {\n  var midday = new Date();\n  midday.setHours(12);\n  return date.getTime() < midday.getTime() ? \"AM\" : \"PM\";\n};\n\nvar getHours = function getHours(date) {\n  var hour = date.getHours() % 12;\n  return hour != 0 ? hour.toString() : \"12\";\n};\n\nvar getMinutes = function getMinutes(date) {\n  var minutes = date.getMinutes();\n  return minutes < 10 ? \"0\" + minutes.toString() : minutes.toString();\n};\n\nvar DateHeader = function DateHeader() {\n  var d = new Date();\n\n  var _useState = useState(d),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  useLayoutEffect(function () {\n    setInterval(function () {\n      setDate(new Date());\n    }, 1000);\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.dateText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, getDay(date), \" \", getMeridian(date)), React.createElement(Text, {\n    style: styles.timeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, getHours(date), \":\", getMinutes(date), getMeridian(date).toLowerCase()));\n};\n\nvar styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\"\n  }\n});\nexport default DateHeader;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/components/DateHeader.js"],"names":["React","useState","useEffect","useLayoutEffect","AppLoading","primaryColors","fonts","day","getDay","date","toDateString","split","getMeridian","midday","Date","setHours","getTime","getHours","hour","toString","getMinutes","minutes","DateHeader","d","setDate","setInterval","styles","dateText","timeText","toLowerCase","StyleSheet","create","dateContainer","marginTop","fontFamily","fontSize","alignSelf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D;;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,aAAT,EAAwBC,KAAxB;AACA,SAASC,GAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AACvB,SAAOF,GAAG,CAACE,IAAI,CAACC,YAAL,GAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAD,CAAV;AACD,CAFD;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,IAAD,EAAU;AAC5B,MAAII,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,QAAP,CAAgB,EAAhB;AACA,SAAON,IAAI,CAACO,OAAL,KAAiBH,MAAM,CAACG,OAAP,EAAjB,GAAoC,IAApC,GAA2C,IAAlD;AACD,CAJD;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,IAAD,EAAU;AACzB,MAAIS,IAAI,GAAGT,IAAI,CAACQ,QAAL,KAAkB,EAA7B;AACA,SAAOC,IAAI,IAAI,CAAR,GAAYA,IAAI,CAACC,QAAL,EAAZ,GAA8B,IAArC;AACD,CAHD;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACX,IAAD,EAAU;AAC3B,MAAIY,OAAO,GAAGZ,IAAI,CAACW,UAAL,EAAd;AACA,SAAOC,OAAO,GAAG,EAAV,GAAe,MAAMA,OAAO,CAACF,QAAR,EAArB,GAA0CE,OAAO,CAACF,QAAR,EAAjD;AACD,CAHD;;AAKA,IAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIC,CAAC,GAAG,IAAIT,IAAJ,EAAR;;AADuB,kBAGCb,QAAQ,CAACsB,CAAD,CAHT;AAAA;AAAA,MAGhBd,IAHgB;AAAA,MAGVe,OAHU;;AAIvBrB,EAAAA,eAAe,CAAC,YAAM;AACpBsB,IAAAA,WAAW,CAAC,YAAM;AAChBD,MAAAA,OAAO,CAAC,IAAIV,IAAJ,EAAD,CAAP;AACD,KAFU,EAER,IAFQ,CAAX;AAGD,GAJc,CAAf;AAMA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,MAAM,CAACC,IAAD,CADT,OACkBG,WAAW,CAACH,IAAD,CAD7B,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QAAQ,CAACR,IAAD,CADX,OACoBW,UAAU,CAACX,IAAD,CAD9B,EAEGG,WAAW,CAACH,IAAD,CAAX,CAAkBoB,WAAlB,EAFH,CAJF,CADF;AAWD,CArBD;;AAuBA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GADgB;AAI/BN,EAAAA,QAAQ,EAAE;AACRO,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAJqB;AAS/BR,EAAAA,QAAQ,EAAE;AACRM,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE;AAHH;AATqB,CAAlB,CAAf;AAeA,eAAed,UAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { StyleSheet, Text, View, AsyncStorage } from \"react-native\";\nimport { AppLoading } from \"expo\";\n\nimport { primaryColors, fonts } from \"../models/Styles.js\";\nimport { day } from \"../models/Dates.js\";\n\nconst getDay = (date) => {\n  return day[date.toDateString().split(\" \")[0]];\n};\n\nconst getMeridian = (date) => {\n  let midday = new Date();\n  midday.setHours(12);\n  return date.getTime() < midday.getTime() ? \"AM\" : \"PM\";\n};\n\nconst getHours = (date) => {\n  let hour = date.getHours() % 12;\n  return hour != 0 ? hour.toString() : \"12\";\n};\n\nconst getMinutes = (date) => {\n  let minutes = date.getMinutes();\n  return minutes < 10 ? \"0\" + minutes.toString() : minutes.toString();\n};\n\nconst DateHeader = () => {\n  let d = new Date();\n\n  const [date, setDate] = useState(d);\n  useLayoutEffect(() => {\n    setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n  });\n\n  return (\n    <View>\n      <Text style={styles.dateText}>\n        {getDay(date)} {getMeridian(date)}\n      </Text>\n      <Text style={styles.timeText}>\n        {getHours(date)}:{getMinutes(date)}\n        {getMeridian(date).toLowerCase()}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  dateContainer: {\n    marginTop: 50,\n  },\n  dateText: {\n    fontFamily: \"acnh\",\n    fontSize: 20,\n    alignSelf: \"center\",\n  },\n  timeText: {\n    fontFamily: \"acnh\",\n    fontSize: 15,\n    alignSelf: \"center\",\n  },\n});\nexport default DateHeader;\n"]},"metadata":{},"sourceType":"module"}