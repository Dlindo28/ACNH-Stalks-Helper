{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_DATA_SUFFICIENCY } from \"../actions/types\";\nvar initState = {\n  sufficiency: false\n};\n\nvar dataSufficiencyReducer = function dataSufficiencyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA_SUFFICIENCY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sufficiency: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataSufficiencyReducer;","map":{"version":3,"sources":["/Users/daniel/Public/Projects/ACNH-Stalks-Helper/frontend/reducers/dataSufficiencyReducer.js"],"names":["SET_DATA_SUFFICIENCY","initState","sufficiency","dataSufficiencyReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,oBAAT;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE;AADG,CAAlB;;AAIA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,sBAAf","sourcesContent":["import { SET_DATA_SUFFICIENCY } from \"../actions/types\";\n\nconst initState = {\n  sufficiency: false,\n};\n\nconst dataSufficiencyReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_DATA_SUFFICIENCY:\n      return {\n        ...state,\n        sufficiency: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataSufficiencyReducer;\n"]},"metadata":{},"sourceType":"module"}